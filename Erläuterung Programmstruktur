INFO:
Das Programm besteht aus einem Client-Server-Modell, bei dem der Client Anfragen an den Server sendet und der Server diese Anfragen verarbeitet. 
Der Client kann sich einloggen, Anfragen stellen und Informationen vom Server empfangen. 
Der Server verwaltet die Verbindungen der Clients, verarbeitet deren Anfragen und verwaltet Benutzerkonten in einer Datenbank. 
Die Kommunikation erfolgt über TCP-Verbindungen, und die Daten werden in einem bestimmten Format gesendet und empfangen.

Überblick über die Klassen und ihre Funktionen:

Interfaces

IEmergencyRequest
  Funktion: Definiert Methoden zur Bearbeitung von Notfallanfragen.
  Interaktionen: Verwendet IRequest
  Wichtige Methoden:
    MakeRequest(string raumnummer, string standort): Erstellt eine Notfallanfrage.
    SendDescription(string description): Sendet eine Beschreibung zur Anfrage.
    CheckRequests(out IRequest request): Überprüft vorhandene Anfragen.
    AcceptRequest(IRequest request): Akzeptiert eine Anfrage.

IRequest
  Funktion: Definiert die Struktur einer Anfrage.
  Wichtige Methoden:
    getRoomnumber(), getLocation(), getDescription(): Rückgabe der Anfragedetails.


Klassen

Client
  Funktion: Ist für die Verwaltung der Netzwerkverbindung zwischen Client und Server für den jeweiligen Account und die Verarbeitung von Datenpaketen zuständig, die vom Server empfangen werden.
  Interaktionen: 
    Nutzt AccountInfo, TcpClient, ServerPackage (Siehe Unten)

ConnectionHandler
  Funktion: Verwaltet die Verbindung und sendet Login-Anfragen.
  Interaktionen: Nutzt Client, ClientPackage, AccountInfo.

SSDServer
  Funktion: Verwaltet eingehende Verbindungen und Anfragen vom Server.
  Interaktionen: Nutzt TcpListener, SSDClient, Request, IRequest.

SSDClient
  Funktion: Verarbeitet Nachrichten vom Client und führt Aktionen aus, wie Meldungen über mögliche Fehler.
  Interaktionen: Nutzt TcpClient, NetworkStream, ServerPackage, ClientPackage, Account, Request.

Request
  Funktion: Repräsentiert eine Notfallanfrage mit Details Standort, Ort, Beschreibung (Aktuell für Ort nur "Raumnummer möglich -> Überarbeiten)
  Interaktionen: Implementiert IRequest.

SSDServer.Database:

   Account
    Funktion: Repräsentiert ein Benutzerkonto mit Daten (ID, username, PasswortHash, Berechtigungen).
    Interaktionen: Wird von ClientDB genutzt.

   ConnectionStringHandler
    Funktion: Verwaltet die Verbindungszeichenfolgen für Datenbanken und lädt dazu die Verbindungsinformationen aus einer databases.env Datei (soll später die Verbindungsdetails zur DB enthalten, die DB und die databases.env-Datei existieren aber noch nicht)
    Interaktionen: -

  ClientDB
    Funktion: Verwaltet die Datenbankverbindung und speichert Kontoinformationen in der Datenbank oder ruft diese ab.
    Interaktionen: Nutzt ConnectionStringHandler, Account.

  Hinweis: In der databases.env-Datei (oder einer ähnlichen Konfigurationsdatei) ist ein Eintrag wie "CLIENT_DB=Data Source=client_database.db" o.ä. zu erwarten. 
  Dieser Eintrag definiert, wo sich die SQLite-Datenbankdatei befindet und wie darauf zugegriffen werden kann.




Verzeichnis SSDAPI:

AccountInfo
  Funktion: Speichert Kontoinformationen (ID, username, PasswortHash, Zugriffsrechte) und wandelt sie in Byte-Arrays um.
  Interaktionen: Wird in ClientPackage und ServerPackage verwendet.

RequestInfo
  Funktion: Speichert Informationen zu einer Notfall-Anfrage (ID, Raumnummer, Ort, Beschreibung) und wandelt sie in Byte-Arrays um.
  Interaktionen: Wird in ClientPackage und ServerPackage verwendet.

ClientPackage
  Funktion: Repräsentiert ein Paket, das vom Client gesendet wird bestehend aus PackageType (Interaktionstyp?: Login, Logout, Request,...), AccountInfo (von wem?), RequestInfo (Wo? Was ist passiert?)
  Interaktionen: Nutzt AccountInfo, RequestInfo.

ServerPackage
  Funktion: Repräsentiert ein Paket, das vom Server gesendet wird bestehend aus ServerPackageType (Interaktionstyp?: Login, Logout, Anfrage erhalten, Anfrage akzeptiert, ...), AccountInfo (von wem?), RequestInfo (Wo? Was ist passiert?)
  Interaktionen: Nutzt AccountInfo, RequestInfo.
